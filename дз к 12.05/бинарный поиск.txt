import java.util.Arrays;
import java.util.Collection;

public class Main {
    public static void main(String[] args) {
        int[] array= new int[]{1,3,6,9,11,14,17,22};
        int k=17;
        int index= 0;
        index = Arrays.binarySearch(array,k);
        //index =search(k,array,0,array.length-1);
       //index=find(k,array,0,array.length-1);

        System.out.println("Chislo = "+k+" ego index ="+index);

    }

    /**
     * четное не четное число  элементов массива
     * если неч длиннамассива+1/2-1
     * если чет делимна 2 -1
     * @return
     */
    public static int findMiddle(int min,int max){
        int middle= min+((max-min)/2);
//        if(array.length % 2 == 0){
//            middle= array.length+1/2+1;
//        }else{
//            middle= array.length/2+1;
//        }
        return middle;
    }
    static int search(int numb, int[] array,int min,int max ){
        int index=0;
        int i=0;
        boolean a= true;
        while(min<=max) {

           /// System.out.println( i);
            int middle =findMiddle(min, max) ;

            System.out.println( middle );
            if (array[middle] > numb) {
                max= middle-1;
            } else if (array[middle] < numb) {
                min= middle+1;
            } else  {
                index = middle;
                break;
            }
            i++;
        }
        return index;
    }
    static int find(int numb, int[] array,int min,int max ){
        int index=0;

        while(min<=max) {

            /// System.out.println( i);
            int middle =findMiddle(min, max) ;

            System.out.println( middle );
            if (array[middle] > numb) {
                index=find(numb,array,min,middle-1);
                max= middle-1;
            } else if (array[middle] < numb) {
                index=find(numb,array,middle+1,max);
                min= middle+1;
            } else  {
                index = middle;
                break;
            }
        }
        return index;
    }
}